{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","start","level","a","b","result","decimal","point","gameTime","countDownTime","startCountdown","plus","critLevel","console","log","randomNumber","key","sum","Number","clearResult","uplevel","size","Math","floor","random","interval","setInterval","clearInterval","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  start = false;\n  level = 1;\n  a = 0;\n  b = 0;\n  result = '';\n  decimal = false;\n  point = 0;\n  gameTime = 15;\n  countDownTime = this.gameTime;\n  interval: any;\n\n  constructor() { }\n\n  startGame() {\n    if (this.start === false) {\n      this.start = true;\n    }\n    this.startCountdown();\n    this.plus();\n  }\n\n  plus() {\n    const critLevel = (this.level + 1) * 5;\n    console.log(critLevel);\n    this.a = this.randomNumber(critLevel);\n    this.b = this.randomNumber(critLevel);\n    if (this.a === 0 || this.b === 0 || this.a + this.b < critLevel - 1) {\n      this.plus();\n    }\n  }\n\n  chooseNumber(key: any) {\n    if (key === '-') {\n      if (this.result === '') {\n        this.result += key;\n      }\n    } else if (key === '.') {\n      if (this.decimal === false && this.result !== '') {\n        this.result += key;\n        this.decimal = true;\n      }\n    } else {\n      this.result += key;\n    }\n  }\n\n  clearResult() {\n    this.result = '';\n    this.decimal = false;\n  }\n\n  uplevel() {\n    this.level++;\n  }\n\n  checkResult() {\n    const sum = this.a + this.b;\n    if (Number(this.result) === sum) {\n      this.countDownTime += 5;\n      this.clearResult();\n      this.plus();\n      this.uplevel();\n    } else {\n      this.clearResult();\n    }\n  }\n\n  randomNumber(size: any) {\n    return Math.floor(Math.random() * size);\n  }\n\n  startCountdown() {\n    this.interval = setInterval(() => {\n      this.countDownTime--;\n      if (this.countDownTime < 0) {\n        clearInterval(this.interval);\n        this.start = false;\n        this.countDownTime = this.gameTime;\n      }\n    }, 1000);\n  }\n}\n","<div *ngIf=\"!start\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <button type=\"button\" class=\"btn btn-lg btn-success\" (click)=\"startGame()\">START</button>\n</div>\n<div *ngIf=\"start\" class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <div>\n        <h1>\n            {{ a }} + {{ b }} = {{ result }}\n        </h1>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n        <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayoutGap=\"5px\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"5px\">\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('1')\">1</button>\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('2')\">2</button>\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('3')\">3</button>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"5px\">\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('4')\">4</button>\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('5')\">5</button>\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('6')\">6</button>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"5px\">\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('7')\">7</button>\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('8')\">8</button>\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('9')\">9</button>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"5px\">\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('-')\">-</button>\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('0')\">0</button>\n                <button class=\"btn btn-primary number\" (click)=\"chooseNumber('.')\">.</button>\n            </div>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\n                <button class=\"btn btn-success control\" (click)=\"checkResult()\">Enter</button>\n                <button class=\"btn btn-danger control\" (click)=\"clearResult()\">Clear</button>\n            </div>\n        </div>\n    </div>\n    <div>\n        <h2>\n            Time: {{ countDownTime }}\n        </h2>\n        <h3>\n          Level: {{ level }}\n        </h3>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}